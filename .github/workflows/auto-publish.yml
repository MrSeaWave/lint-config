# 自动发布
name: Auto Publish

# https://docs.github.com/en/actions/learn-github-actions/workflow-syntax-for-github-actions#onpushpull_requestpaths
on:
  push:
    branches:
      - main
    paths:
      - 'packages/**/*.js'
      - '**/package*.json'

jobs:
  auto-publish:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [14.x]

    steps:
      - name: Checkout
        uses: actions/checkout@main
        with:
          # 0 indicates all history for all branches and tags.
          fetch-depth: '0'

      - name: Use Node.js
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}
          registry-url: https://registry.npmjs.org/

      - name: Global install Yarn 🔨
        run: npm install -g yarn
      - name: Print Env 📄
        run: |
          echo "node"
          node -v
          echo "npm"
          npm -v
          echo "yarn"
          yarn -v

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - name: Cache yarn cache
        uses: actions/cache@v2
        id: cache-yarn-cache
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}-${{ hashFiles('**/package.json') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Cache node_modules
        id: cache-node-modules
        uses: actions/cache@v2
        with:
          path: |
            node_modules
            */*/node_modules
          key: ${{ runner.os }}-${{ matrix.node-version }}-nodeModules-${{ hashFiles('**/yarn.lock') }}-${{ hashFiles('**/package.json') }}
          restore-keys: |
            ${{ runner.os }}-${{ matrix.node-version }}-nodeModules-

      - name: Install dependencies 📦️
        if: |
          steps.cache-yarn-cache.outputs.cache-hit != 'true' ||
          steps.cache-node-modules.outputs.cache-hit != 'true'
        run: yarn install

      - name: Setup credentials
        # 仅是为了区分，暂无其他作用
        run: |
          git config --global user.email action@github.com
          git config --global user.name GitHub Action
        # run: |
        #   git config --global user.email MrDaemon@outlook.com
        #   git config --global user.name Sea

      - name: Publish 🚀
        # https://github.com/lerna/lerna/issues/2788
        run: npm run release -- --yes --no-verify-access
        # https://github.com/lerna/lerna/issues/2404
        # 登录 npmjs.com 后，找到个人中心菜单里面的 “Access Tokens” 菜单，然后点击右上角的 “Generate New Token” 生成 token 按钮
        # 注：npm access token 有三种，但只有 publish 权限且可绕过 2FA 的只有 automation token。
        env:
          NODE_AUTH_TOKEN: ${{secrets.NPM_TOKEN}}
