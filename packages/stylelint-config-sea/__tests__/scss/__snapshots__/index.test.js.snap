// Vitest Snapshot v1, https://vitest.dev/guide/snapshot.html

exports[`stylelint-config-sea with valid scss > rules snapshot 1`] = `
{
  "alpha-value-notation": [
    "percentage",
    {
      "exceptProperties": [
        "opacity",
        "fill-opacity",
        "flood-opacity",
        "stop-opacity",
        "stroke-opacity",
      ],
    },
  ],
  "annotation-no-unknown": null,
  "at-rule-empty-line-before": [
    "always",
    {
      "except": [
        "blockless-after-blockless",
        "first-nested",
      ],
      "ignore": [
        "after-comment",
      ],
      "ignoreAtRules": [
        "else",
      ],
    },
  ],
  "at-rule-no-unknown": null,
  "at-rule-no-vendor-prefix": [
    true,
  ],
  "block-no-empty": [
    true,
  ],
  "color-function-notation": [
    "modern",
  ],
  "color-hex-length": [
    "short",
  ],
  "color-no-invalid-hex": [
    true,
  ],
  "comment-empty-line-before": [
    "always",
    {
      "except": [
        "first-nested",
      ],
      "ignore": [
        "stylelint-commands",
      ],
    },
  ],
  "comment-no-empty": null,
  "comment-whitespace-inside": [
    "always",
  ],
  "custom-media-pattern": [
    "^([a-z][a-z0-9]*)(-[a-z0-9]+)*$",
    {
      "message": [Function],
    },
  ],
  "custom-property-empty-line-before": [
    "always",
    {
      "except": [
        "after-custom-property",
        "first-nested",
      ],
      "ignore": [
        "after-comment",
        "inside-single-line-block",
      ],
    },
  ],
  "custom-property-no-missing-var-function": [
    true,
  ],
  "custom-property-pattern": [
    "^([a-z][a-z0-9]*)(-[a-z0-9]+)*$",
    {
      "message": [Function],
    },
  ],
  "declaration-block-no-duplicate-custom-properties": [
    true,
  ],
  "declaration-block-no-duplicate-properties": [
    true,
    {
      "ignore": [
        "consecutive-duplicates-with-different-syntaxes",
      ],
    },
  ],
  "declaration-block-no-redundant-longhand-properties": [
    true,
  ],
  "declaration-block-no-shorthand-property-overrides": [
    true,
  ],
  "declaration-block-single-line-max-declarations": [
    1,
  ],
  "declaration-empty-line-before": [
    "always",
    {
      "except": [
        "after-declaration",
        "first-nested",
      ],
      "ignore": [
        "after-comment",
        "inside-single-line-block",
      ],
    },
  ],
  "font-family-name-quotes": [
    "always-where-recommended",
  ],
  "font-family-no-duplicate-names": [
    true,
  ],
  "font-family-no-missing-generic-family-keyword": [
    true,
  ],
  "function-calc-no-unspaced-operator": [
    true,
  ],
  "function-linear-gradient-no-nonstandard-direction": [
    true,
  ],
  "function-name-case": [
    "lower",
  ],
  "function-no-unknown": null,
  "function-url-quotes": [
    "always",
  ],
  "hue-degree-notation": [
    "angle",
  ],
  "import-notation": [
    "string",
  ],
  "keyframe-block-no-duplicate-selectors": [
    true,
  ],
  "keyframe-declaration-no-important": [
    true,
  ],
  "keyframe-selector-notation": [
    "percentage-unless-within-keyword-only-block",
  ],
  "keyframes-name-pattern": [
    "^([a-z][a-z0-9]*)(-[a-z0-9]+)*$",
    {
      "message": [Function],
    },
  ],
  "length-zero-no-unit": [
    true,
    {
      "ignore": [
        "custom-properties",
      ],
    },
  ],
  "lightness-notation": [
    "percentage",
  ],
  "media-feature-name-no-unknown": [
    true,
  ],
  "media-feature-name-no-vendor-prefix": [
    true,
  ],
  "media-feature-range-notation": [
    "context",
  ],
  "media-query-no-invalid": null,
  "named-grid-areas-no-invalid": [
    true,
  ],
  "no-descending-specificity": null,
  "no-duplicate-at-import-rules": [
    true,
  ],
  "no-duplicate-selectors": [
    true,
  ],
  "no-empty-source": [
    true,
  ],
  "no-invalid-double-slash-comments": [
    true,
  ],
  "no-invalid-position-at-import-rule": [
    true,
    {
      "ignoreAtRules": [
        "use",
        "forward",
      ],
    },
  ],
  "no-irregular-whitespace": [
    true,
  ],
  "number-max-precision": [
    4,
  ],
  "property-no-unknown": [
    true,
  ],
  "property-no-vendor-prefix": [
    true,
  ],
  "rule-empty-line-before": [
    "always-multi-line",
    {
      "except": [
        "first-nested",
      ],
      "ignore": [
        "after-comment",
      ],
    },
  ],
  "scss/at-else-closing-brace-newline-after": [
    "always-last-in-chain",
  ],
  "scss/at-else-closing-brace-space-after": [
    "always-intermediate",
  ],
  "scss/at-else-empty-line-before": [
    "never",
  ],
  "scss/at-else-if-parentheses-space-before": [
    "always",
  ],
  "scss/at-extend-no-missing-placeholder": [
    true,
  ],
  "scss/at-function-parentheses-space-before": [
    "never",
  ],
  "scss/at-function-pattern": [
    "^(-?[a-z][a-z0-9]*)(-[a-z0-9]+)*$",
    {
      "message": "Expected function name to be kebab-case",
    },
  ],
  "scss/at-if-closing-brace-newline-after": [
    "always-last-in-chain",
  ],
  "scss/at-if-closing-brace-space-after": [
    "always-intermediate",
  ],
  "scss/at-if-no-null": [
    true,
  ],
  "scss/at-mixin-argumentless-call-parentheses": [
    "never",
  ],
  "scss/at-mixin-parentheses-space-before": [
    "never",
  ],
  "scss/at-mixin-pattern": [
    "^(-?[a-z][a-z0-9]*)(-[a-z0-9]+)*$",
    {
      "message": "Expected mixin name to be kebab-case",
    },
  ],
  "scss/at-rule-conditional-no-parentheses": [
    true,
  ],
  "scss/at-rule-no-unknown": [
    true,
  ],
  "scss/comment-no-empty": [
    true,
  ],
  "scss/declaration-nested-properties-no-divided-groups": [
    true,
  ],
  "scss/dollar-variable-colon-space-after": [
    "always-single-line",
  ],
  "scss/dollar-variable-colon-space-before": [
    "never",
  ],
  "scss/dollar-variable-empty-line-before": [
    "always",
    {
      "except": [
        "after-dollar-variable",
        "first-nested",
      ],
      "ignore": [
        "after-comment",
        "inside-single-line-block",
      ],
    },
  ],
  "scss/dollar-variable-no-missing-interpolation": [
    true,
  ],
  "scss/dollar-variable-pattern": [
    "^(-?[a-z][a-z0-9]*)(-[a-z0-9]+)*$",
    {
      "message": "Expected variable to be kebab-case",
    },
  ],
  "scss/double-slash-comment-empty-line-before": [
    "always",
    {
      "except": [
        "first-nested",
      ],
      "ignore": [
        "between-comments",
        "stylelint-commands",
      ],
    },
  ],
  "scss/double-slash-comment-whitespace-inside": [
    "always",
  ],
  "scss/function-quote-no-quoted-strings-inside": [
    true,
  ],
  "scss/function-unquote-no-unquoted-strings-inside": [
    true,
  ],
  "scss/load-no-partial-leading-underscore": [
    true,
  ],
  "scss/load-partial-extension": [
    "never",
  ],
  "scss/no-duplicate-mixins": [
    true,
  ],
  "scss/no-global-function-names": [
    true,
  ],
  "scss/operator-no-newline-after": [
    true,
  ],
  "scss/operator-no-newline-before": [
    true,
  ],
  "scss/operator-no-unspaced": [
    true,
  ],
  "scss/percent-placeholder-pattern": [
    "^(-?[a-z][a-z0-9]*)(-[a-z0-9]+)*$",
    {
      "message": "Expected placeholder to be kebab-case",
    },
  ],
  "selector-anb-no-unmatchable": [
    true,
  ],
  "selector-attribute-quotes": [
    "always",
  ],
  "selector-class-pattern": [
    "^([a-z][a-z0-9]*)(-[a-z0-9]+)*$",
    {
      "message": [Function],
    },
  ],
  "selector-id-pattern": [
    "^([a-z][a-z0-9]*)(-[a-z0-9]+)*$",
    {
      "message": [Function],
    },
  ],
  "selector-no-vendor-prefix": [
    true,
  ],
  "selector-not-notation": [
    "complex",
  ],
  "selector-pseudo-class-no-unknown": [
    true,
    {
      "ignorePseudoClasses": [
        "global",
        "export",
        "/^my-/",
      ],
    },
  ],
  "selector-pseudo-element-colon-notation": [
    "double",
  ],
  "selector-pseudo-element-no-unknown": [
    true,
  ],
  "selector-type-case": [
    "lower",
  ],
  "selector-type-no-unknown": [
    true,
    {
      "ignore": [
        "custom-elements",
      ],
    },
  ],
  "shorthand-property-no-redundant-values": [
    true,
  ],
  "string-no-newline": [
    true,
  ],
  "unit-no-unknown": [
    true,
  ],
  "value-keyword-case": [
    "lower",
  ],
  "value-no-vendor-prefix": [
    true,
    {
      "ignoreValues": [
        "box",
        "inline-box",
      ],
    },
  ],
}
`;
